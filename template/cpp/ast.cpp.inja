#ifndef _{{upper(node.property.namespace)}}_H_
#define _{{upper(node.property.namespace)}}_H_

#include <iostream>
#include <variant>
#include <string>
#include <thread>
#include <typeinfo>
#include <functional>
#include <optional>
#include <memory>
#include <unordered_map>
#include <any>
#include <mutex>
#ifdef __cpp_impl_coroutine
#include <coroutine>
#endif
#include <optional>

#include <msgpack.hpp>
#include <uuid/uuid.h>
#include <zmq.hpp>
#include <zmq_addon.hpp>

#ifdef __cpp_impl_coroutine
#include <asio.hpp>
#include <asio/experimental/concurrent_channel.hpp>

{% include "asio_context_pool.inja" %}
#endif

{% include "utils.inja" %}

{% include "monitor.inja" %}

{% include "bi_channel.inja" %}

{% include "uni_channel.inja" %}

{% for value in node.value %}
	{% if value.type == "enum" %}
			{% include "enum.inja" %}
	{% endif %}
{% endfor %}

{% for value in node.value %}
	{% if value.type == "struct" %}
			{% include "struct.inja" %}
	{% endif %}
{% endfor %}

{% for value in node.value %}
	{% if value.type == "interface" %}
		{% if value.pattern == "bi" %}
			{% include "bi.inja" %}
		{% endif %}
	{% endif %}
{% endfor %}

{% for value in node.value %}
	{% if value.type == "interface" %}
		{% if value.pattern == "uni" %}
			{% include "uni.inja" %}
		{% endif %}
	{% endif %}
{% endfor %}

{% for value in node.value %}
	{% if value.type == "interface" %}
		{% if value.pattern == "bi_stream" %}
			{% include "bi_stream.inja" %}
		{% endif %}
	{% endif %}
{% endfor %}

#endif //_{{upper(node.property.namespace)}}_H_
